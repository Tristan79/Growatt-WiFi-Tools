TRiXwooD Domoticz Mod
---------------------

ToDo P1 meter and record total today to add it if resetted... since if the inverter stops (cuz sunlight/manual switches off) it reset the count of today


Combined growatt_server and growatt_data to growatt_domoticz

hard coded host, port and idx of the custom sensors.

Custom sensors used:

usage/temperature/voltage and energy instant/counter

If you do not want to use domoticz but openhab or something else, change the urls in the code to call your favourite domotica software controller!

Run:

git clone https://github.com/Tristan79/Growatt-WiFi-Tools.git
perl -MCPAN -e 'install Data::Hexify'
perl -MCPAN -e 'install Text::CSV'
perl -MCPAN -e 'install IO::Wrap'
mkdir /home/pi/Growatt-WiFi-Tools/data/

(do not add ----- their seperators in the following)

sudo nano /etc/systemd/system/growatt@.service
------
[Unit]
Description=Growatt Domoticz Server

[Service]
SyslogIdentifier=growatt
User=pi
Group=pi
WorkingDirectory=/home/pi/Growatt-WiFi-Tools/
ExecStart=-/usr/bin/perl /home/pi/Growatt-WiFi-Tools/scripts/growatt_server_domoticz.pl --systemd --datadir=/home/pi/Growatt-WiFi-Tools/data/
StandardInput=socket
StandardOutput=syslog
------

sudo nano /etc/systemd/system/growatt.socket
------

[Unit]
Description=Growatt Proxy Socket

[Socket]
ListenStream=5279
Accept=yes

[Install]
WantedBy=sockets.target

-----






Change to your configuration

nano /home/pi/Growatt-WiFi-Tools/scripts/growatt_server_domoticz.pl
-------

my $domo_ip = "127.0.0.1";
my $domo_port = "8080";

### YOU CAN ADD MORE ID HERE, SINCE MY SETUP DO NOT USE ALL VALUES!

my $id_temp = "43";
my $id_ppv = "44";
my $id_ppv1 = "46";
my $id_pac = "45";
my $id_pac1 = "47";
my $id_pbusvolt = "48";
my $id_total = "50";
my $id_today = "49";
my $id_epvtotal = "51";
my $id_epv1total = "53";
my $id_epv1today = "52";
my $id_iac1 = "55";
my $id_ipv1 = "56";
my $id_fac = "54";
my $id_p1 = "57";
my $id_status = "91";
my $id_vpv1 = "92";
my $id_vac1 = "94";

------
in domoticz create dummy hardware with the following sensors...
1 temp sensor, 
1 custom hz sensor (for fac)
2 ampere (1 sinus) sensors (for iac1,ipv1)
3 voltage sensors (for vpv1,vac1 and pbusvolt)
1 text (for status)
4 usage sensors (ppv,pac,ppv1,pac1)
5 energy (total,today,epv Total,Epv1 Total,Epv1 Today)
1 P1 

if you have more data (epv2 for example) look at

https://github.com/Tristan79/Growatt-WiFi-Tools/blob/master/scripts/growatt_data.pl#L59

you can add them here

ids:

https://github.com/Tristan79/Growatt-WiFi-Tools/blob/master/scripts/growatt_server_domoticz.pl#L78

call to domoticz:

https://github.com/Tristan79/Growatt-WiFi-Tools/blob/master/scripts/growatt_server_domoticz.pl#L1031

now start the stuff...

sudo systemctl enable growatt.socket
sudo systemctl start growatt.socket




-----------------------------------------------------------------------------


This is a set of tools to play with the Growatt WiFi data collection
module.

1. Install Perl if neccessary, add module Data::Hexify .

NOTE: You may need to adjust paths to scripts and files, depending on
your installation.

2. Start either the proxy server, or the standalone server.

2a. Start proxy server:

   perl growatt_server.pl --debug --remote

   make sure it keeps running!

   There are some systemd/growattproxy* files to deploy the proxy
   server using systemd.

   The proxy server will intercept all communication between the WiFi
   module and the Growatt server, and copy the energy data packages to
   local disk.

2b. Start standalone server:

   perl growatt_server.pl --debug

   make sure it keeps running!

   There are some systemd/growattserver* files to deploy the 
   server using systemd.

   The standalone server is like the proxy server, but does not use
   the Growatt server. It just copies the energy data packages to
   local disk.

2c. For systemd, install the supplied growatt*.socket and
    growatt*@.service files into /etc/systemd/system . Adjust
   growatt*@.service to reflect the actual location of the simple
   server script, and the location where the data should be collected.

   Start the service (as super user), e.g. for the standalone server:

   systemctl start growattserver.socket

   If you're satisfied, you can remove the "--debug" option in
   growattserver@.service to reduce the log messages. And do not forget
   to enable growattserver.socket using systemctl so it will be
   activated automatically upon reboot.

   When deployed using systemd, a logfile will be created in the
   server directory. The name of the logfile is derived from the
   current date, e.g., 20150702.log.

3. In the Growatt WiFi module, set the server to the system running
   the proxy or standalone server. A reboot of the module is
   neccessary.

   NOTICE: Currently there's a hard-wired fix in the proxy server to
   misinform the Growatt server that it is sending data to
   "server.growatt.com". Likewise, if an instruction arrives from the
   server to change the server address, this is changed to the actual
   address.

   I hope to remove this 'fix' when Growatt finally switches their
   servers to another location.

   The standalone server doesn't have nor need this 'fix' code.

4. In the directory where the proxy server is running small data files
   will be created:

	   20150702163939.dat
	   20150702164451.dat
	   ...and so on...

   You can read these with

   perl growatt_data.pl 20150702163939.dat

   This script assumes your version of the Growatt WiFi module is
   2.0.0.0 or higher. If you have a 1.0.0.0 module, pass the
   --version=1 command line option to the script.

5. If you have a collection of data files, for example the data for
   one day, you can generate a chart using

   perl growatt_data.pl --day --csv 20150702*.dat > current.csv
   gnuplot growatt_data.plot

   This will produce a PNG image:

   current.png - power production, accumulative, total and per PV

   Also note that the format of the csv file generated is now the same
   as an export from the spreadsheet data that can be downloaded from
   the Growatt site.

6. If you have a series of current.csv data files, for example the
   data for one month, you can generate a chart using

   perl growatt_daily.pl 2015/07/*/current.csv > daily.csv
   gnuplot growatt_daily.plot

   This will produce a PNG image:

   daily.png - power production per day

WARNING: Use at your own risk.

Feedback welcome.
